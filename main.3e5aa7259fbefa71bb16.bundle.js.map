{"version":3,"file":"main.3e5aa7259fbefa71bb16.bundle.js","mappings":"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","sources":["webpack://automated-system-viewer/./src/Providers/ActiveNodeContext.js","webpack://automated-system-viewer/./src/Providers/ActiveSystemContext.js","webpack://automated-system-viewer/./src/Providers/ActiveTraceContext.js","webpack://automated-system-viewer/./src/Providers/ActiveTracesContext.js","webpack://automated-system-viewer/./src/Providers/System.js","webpack://automated-system-viewer/./src/Providers/SystemsContext.js","webpack://automated-system-viewer/./src/Providers/WebsocketConnectionStateContext.js","webpack://automated-system-viewer/./src/Providers/ASPProviders.js","webpack://automated-system-viewer/./src/Components/TraceDiagram/DagreLayout.js","webpack://automated-system-viewer/./src/Components/TraceDiagram/helper.js","webpack://automated-system-viewer/./src/Components/TraceDiagram/TraceDiagram.jsx","webpack://automated-system-viewer/./src/Viewer/FileViewer/FileViewer.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/SystemSelector/SystemSelector.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/TraceView/TraceRow/TraceRow.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/TraceView/TraceRow/helper.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/TraceView/TraceView.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/VerticleHandle/VerticleHandle.js","webpack://automated-system-viewer/./src/Components/SystemSelectorContainer/SystemSelectorContainer.js","webpack://automated-system-viewer/./src/Viewer/LeftSideContainer/LeftSideContainer.js","webpack://automated-system-viewer/./src/Components/VariableStackContainer/VariableContainer/VariableContainer.js","webpack://automated-system-viewer/./src/Components/VariableStackContainer/VerticleHandle/VerticleHandle.js","webpack://automated-system-viewer/./src/Components/VariableStackContainer/VariableStackContainer.js","webpack://automated-system-viewer/./src/Viewer/RightSideContainer/RightSideContainer.js","webpack://automated-system-viewer/./src/Components/StatusBar/StatusBar.js","webpack://automated-system-viewer/./src/Viewer/Viewer.js","webpack://automated-system-viewer/./src/App.js","webpack://automated-system-viewer/./src/index.js"],"sourcesContent":["import {createContext} from \"react\";\n\n// This context stores the active node.\nconst ActiveNodeContext = createContext();\n\nexport default ActiveNodeContext;\n","import {createContext} from \"react\";\n\n// This context stores the active system information.\nconst ActiveSystemContext = createContext();\n\nexport default ActiveSystemContext;\n","import {createContext} from \"react\";\n\n// This context stores the active system trace.\nconst ActiveTraceContext = createContext();\n\nexport default ActiveTraceContext;\n","import {createContext} from \"react\";\n\n// This context stores the active system traces.\nconst ActiveTracesContext = createContext();\n\nexport default ActiveTracesContext;\n","\n/**\n * This class contains all the properties of a system.\n */\nclass System {\n    /**\n     * @param {Object} systemInfo Information about the loaded system.\n     */\n    constructor (systemInfo) {\n        this.id = systemInfo.system_id + \"_\" + systemInfo.version;\n        this.sysId = String(systemInfo.system_id);\n        this.version = String(systemInfo.version);\n        this.programs = systemInfo.programs;\n        this.deployments = systemInfo.deployments;\n\n        console.log(\"Created System:\", this.sysId, this.version);\n    }\n}\n\nexport default System;\n","import {createContext} from \"react\";\n\n// This context stores the unique traces extracted by system processor.\nconst SystemsContext = createContext();\n\nexport default SystemsContext;\n","import {createContext} from \"react\";\n\n// This context stores the websocket state.\nconst WebsocketConnectionStateContext = createContext();\n\nexport default WebsocketConnectionStateContext;\n","import React, {useEffect, useState} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport useWebSocket, {ReadyState} from \"react-use-websocket\";\n\nimport ActiveNodeContext from \"./ActiveNodeContext\";\nimport ActiveSystemContext from \"./ActiveSystemContext\";\nimport ActiveTraceContext from \"./ActiveTraceContext\";\nimport ActiveTracesContext from \"./ActiveTracesContext\";\nimport System from \"./System\";\nimport SystemsContext from \"./SystemsContext\";\nimport WebsocketConnectionStateContext from \"./WebsocketConnectionStateContext\";\n\nASPProviders.propTypes = {\n    children: PropTypes.object,\n};\n\nconst WS_URL = \"ws://localhost:8765\";\n\n/**\n * Provides all contexts consumed by the application.\n * @param {JSX} children\n * @param {string} fileInfo\n * @return {JSX}\n */\nfunction ASPProviders ({children}) {\n    // State that holds the history of received messages\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    const [systemsList, setSystemsList] = useState(null);\n    const [activeSystem, setActiveSystem] = useState();\n    const [activeTraces, setActiveTraces] = useState();\n    const [activeTrace, setActiveTrace] = useState();\n    const [activeNode, setActiveNode] = useState();\n\n    // Open websocket connection and reconnect when it closes\n    const {sendJsonMessage, lastJsonMessage, readyState} = useWebSocket(\n        WS_URL,\n        {\n            share: false,\n            shouldReconnect: () => true,\n        }\n    );\n\n    // Map connection status to string for debugging\n    const connectionStatus = {\n        [ReadyState.CONNECTING]: \"Connecting\",\n        [ReadyState.OPEN]: \"Open\",\n        [ReadyState.CLOSING]: \"Closing\",\n        [ReadyState.CLOSED]: \"Closed\",\n        [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\n    }[readyState];\n\n    // React to changes in the websocket state\n    useEffect(() => {\n        console.debug(`Connection state: ${connectionStatus}`);\n        if (readyState === ReadyState.OPEN) {\n            sendJsonMessage(\n                {queryType: \"GET_SYSTEMS\"}\n            );\n        }\n    }, [readyState]);\n\n    // React to received messages\n    useEffect(() => {\n        if (lastJsonMessage) {\n            handleMessage(lastJsonMessage);\n            setMessageHistory((prev) => prev.concat(lastJsonMessage));\n        }\n    }, [lastJsonMessage]);\n\n    // Load the systems\n    const loadSystems = (systems) => {\n        const _systems = [];\n        systems.forEach((system, index) => {\n            _systems.push(new System(system));\n        });\n        setSystemsList(_systems);\n    };\n\n    const handleMessage = (msg) => {\n        if (msg.queryType == \"GET_SYSTEMS\") {\n            loadSystems(msg.response);\n        } else if (msg.queryType == \"GET_TRACES\") {\n            setActiveTraces(msg.response);\n        }\n    };\n\n    // Get the traces for the active system and deployment.\n    useEffect(() => {\n        if (activeSystem) {\n            sendJsonMessage({\n                queryType: \"GET_TRACES\",\n                data: {\n                    \"systemId\": activeSystem.id,\n                    \"systemVersion\": activeSystem.version,\n                    \"deploymentId\": activeSystem.deployment,\n                },\n            });\n        }\n    }, [activeSystem]);\n\n    return (\n        <WebsocketConnectionStateContext.Provider value={{readyState}}>\n            <ActiveNodeContext.Provider value={{activeNode, setActiveNode}}>\n                <ActiveTraceContext.Provider value={{activeTrace, setActiveTrace}}>\n                    <SystemsContext.Provider value={{systemsList}}>\n                        <ActiveSystemContext.Provider value={{activeSystem, setActiveSystem}}>\n                            <ActiveTracesContext.Provider value={{activeTraces, setActiveTraces}}>\n                                {children}\n                            </ActiveTracesContext.Provider>\n                        </ActiveSystemContext.Provider>\n                    </SystemsContext.Provider>\n                </ActiveTraceContext.Provider>\n            </ActiveNodeContext.Provider>\n        </WebsocketConnectionStateContext.Provider>\n    );\n};\n\nexport default ASPProviders;\n","\nimport Dagre from \"@dagrejs/dagre\";\n\nexport const getLayoutedElements = (nodes, edges, options) => {\n    // Reference: https://reactflow.dev/learn/layouting/layouting\n\n    const g = new Dagre.graphlib.Graph().setDefaultEdgeLabel(() => ({}));\n    g.setGraph({rankdir: options.direction, ranksep: 100});\n\n    edges.forEach((edge) => g.setEdge(edge.source, edge.target));\n    nodes.forEach((node) =>\n        g.setNode(node.id, {\n            ...node,\n            width: node.measured?.width ?? 0,\n            height: node.measured?.height ?? 0,\n        })\n    );\n\n    Dagre.layout(g);\n\n    return {\n        nodes: nodes.map((node) => {\n            const position = g.node(node.id);\n            // We are shifting the dagre node position (anchor=center center)\n            // to the top left so it matches the React Flow node anchor\n            // point (top left).\n            const x = position.x - (node.measured?.width ?? 0) / 2;\n            const y = position.y - (node.measured?.height ?? 0) / 2;\n\n            return {...node, position: {x, y}};\n        }),\n        edges,\n    };\n};\n","import {MarkerType} from \"@xyflow/react\";\n\nconst marker = {\n    type: MarkerType.ArrowClosed,\n    width: 20,\n    height: 20,\n    color: \"#FF0072\",\n};\n\nconst arrowStyle = {\n    strokeWidth: 2,\n    stroke: \"#FF0072\",\n};\n\n/**\n * Returns react flow nodes and edges from the given trace.\n * @param {Object} trace A trace to convert to react flow compatible\n *                       node and edge structure.\n * @return {Array} An object which contains the nodes and edges.\n */\nexport const getNodesFromTrace = (trace) => {\n    const edges = [];\n    const nodes = [];\n\n    // Validate input\n    if (!Array.isArray(trace) || trace.length === 0) {\n        return {nodes, edges};\n    }\n\n    trace.forEach((node, index) => {\n        node.flowId = String(index) + node.adliExecutionId;\n\n        // The initial position doesn't matter because we will\n        // be using other algorithms to layout the nodes.\n        const flowNode = {\n            id: node.flowId,\n            position: {x: 250, y: index * 200},\n            data: {label: node.programName},\n        };\n        flowNode.sourceNode = node;\n\n        if (index == 0) {\n            flowNode.type = \"input\";\n        }\n\n        if (index == trace.length - 1) {\n            flowNode.type = \"output\";\n        }\n\n        if (index > 0) {\n            const prevNode = trace[index - 1];\n            const edge = {\n                id: prevNode.flowId + \"-\" + node.flowId,\n                source: prevNode.flowId,\n                target: node.flowId,\n                animated: true,\n                markerEnd: marker,\n                style: arrowStyle,\n            };\n            edges.push(edge);\n        }\n\n        nodes.push(flowNode);\n    });\n\n    return {\n        nodes: nodes,\n        edges: edges,\n    };\n};\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\n\nimport {\n    Controls,\n    Panel,\n    ReactFlow,\n    ReactFlowProvider,\n    useEdgesState,\n    useNodesState,\n    useReactFlow\n} from \"@xyflow/react\";\nimport PropTypes from \"prop-types\";\n\nimport ActiveNodeContext from \"../../Providers/ActiveNodeContext.js\";\nimport ActiveTraceContext from \"../../Providers/ActiveTraceContext.js\";\nimport {getLayoutedElements} from \"./DagreLayout.js\";\nimport {getNodesFromTrace} from \"./helper.js\";\n\nimport \"@xyflow/react/dist/style.css\";\nimport \"./TraceDiagram.scss\";\n\n\nconst Flow = ({trace}) => {\n    const {fitView} = useReactFlow();\n    const [colorMode, setColorMode] = useState(\"dark\");\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n    const {activeNode, setActiveNode}= useContext(ActiveNodeContext);\n\n    useEffect(() => {\n        if (trace) {\n            // Set initial layout of nodes with a vertical layout\n            const flowInfo = getNodesFromTrace(trace);\n            const layouted = getLayoutedElements(\n                flowInfo.nodes,\n                flowInfo.edges,\n                {direction: \"TB\"}\n            );\n\n            setNodes([...layouted.nodes]);\n            setEdges([...layouted.edges]);\n\n            fitView();\n        }\n    }, [trace]);\n\n    const onNodeClick = (e, node) => {\n        setActiveNode(node);\n    };\n\n    const onPanelClick = (e, node) => {\n        setActiveNode(node);\n    };\n\n    return (\n        <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            colorMode={colorMode}\n            onNodeClick={onNodeClick}\n            onPaneClick={onPanelClick}\n            fitView\n        >\n            <Controls />\n        </ReactFlow>\n    );\n};\n\nFlow.propTypes = {\n    trace: PropTypes.array,\n};\n\nexport const TraceDiagram = ({traces}) => {\n    const [traceList, setTraceList] = useState();\n\n    const {activeTrace, setActiveTrace} = useContext(ActiveTraceContext);\n\n    useEffect(() => {\n        if (activeTrace) {\n            setTraceList(JSON.parse(activeTrace.traces));\n        }\n    }, [activeTrace]);\n\n    return (\n        <ReactFlowProvider>\n            <Flow trace={traceList} />\n        </ReactFlowProvider>\n    );\n};\n\nTraceDiagram.propTypes = {\n    traces: PropTypes.array,\n};\n","import React, {useEffect, useRef, useState} from \"react\";\n\nimport {TraceDiagram} from \"../../Components/TraceDiagram/TraceDiagram\";\n\nimport \"./FileViewer.scss\";\n\n/**\n * Renders the monaco editor and the tabs.\n * @return {JSX.Element}\n */\nexport function FileViewer () {\n    return (\n        <>\n            <TraceDiagram />\n        </>\n    );\n}\n","import React, {useContext, useEffect, useState} from \"react\";\n\nimport ActiveSystemContext from \"../../../Providers/ActiveSystemContext\";\nimport SystemsContext from \"../../../Providers/SystemsContext\";\n\nimport \"./SystemSelector.scss\";\n\n/**\n * Contains the system selector components.\n * @return {JSX.Element}\n */\nexport function SystemSelector () {\n    const {systemsList} = useContext(SystemsContext);\n    const {activeSystem, setActiveSystem} = useContext(ActiveSystemContext);\n\n    const [systems, setSystems] = useState([]);\n    const [versions, setVersions] = useState([]);\n    const [deployments, setDeployments] = useState([]);\n    const [activeSystemId, setActiveSystemId] = useState();\n    const [activeVersion, setActiveVersion] = useState();\n    const [activeDeployment, setActiveDeployment] = useState();\n\n    // Load system select dropdown from systemsList and set active system.\n    const loadSystems = () => {\n        if (!systemsList || !Array.isArray(systemsList) || systemsList.length === 0) {\n            setSystems([]);\n            setVersions([]);\n            setDeployments([]);\n            return;\n        }\n        const sysIds = [...new Set(systemsList.map((item) => item.sysId))];\n        const _systems = [];\n        sysIds.forEach((id, index) => {\n            _systems.push(<option key={id} value={id}>{id}</option>);\n        });\n        setSystems(_systems);\n        if (sysIds.length > 0) {\n            loadVersions(sysIds[0]);\n        }\n    };\n\n    // Given a sys ID, load versions into select dropdown and set active version\n    const loadVersions = (systemid) => {\n        setActiveSystemId(systemid);\n        const filteredSystems = systemsList.filter((obj) => {return obj.sysId === systemid;});\n        const versionsList = [...new Set(filteredSystems.map((item) => item.version))];\n        const _versions = [];\n        versionsList.forEach((version, index) => {\n            _versions.push(<option key={version} value={version}>{version}</option>);\n        });\n        setVersions(_versions);\n        loadDeployments(systemid, versionsList[0]);\n    };\n\n    // Given a system id and version load deployments and set active deployment.\n    const loadDeployments = (systemid, version) => {\n        setActiveVersion(version);\n        const sys = systemsList.filter(\n            (obj) => {return (obj.sysId === systemid && obj.version == version);}\n        )[0];\n        const _deployments = [];\n        const sysDeployments = sys.deployments;\n        if (sys && sysDeployments && Array.isArray(sysDeployments) && sysDeployments.length > 0) {\n            sysDeployments.forEach((deployment, index) => {\n                const id = deployment.deployment_id;\n                _deployments.push(<option key={id} value={id}>{id}</option>);\n            });\n            setDeployments(_deployments);\n            setActiveDeployment(sysDeployments[0].deployment_id);\n            setActiveSystem({\n                id: systemid,\n                version: version,\n                deployment: sysDeployments[0].deployment_id,\n            });\n        } else {\n            setDeployments([]);\n            setActiveDeployment(null);\n        }\n    };\n\n    // Callback functions when selector is manually changed\n    const selectVersion = (e) => {\n        loadDeployments(activeSystemId, e.target.value);\n    };\n\n    const selectSystemId = (e) => {\n        loadVersions(e.target.value);\n    };\n\n    const selectDeployment = (e) => {\n        setActiveDeployment(e.target.value);\n        setActiveSystem({\n            id: activeSystemId,\n            version: activeVersion,\n            deployment: e.target.value,\n        });\n    };\n\n    // React to changes in systems, system and version\n    useEffect(() => {\n        if (systemsList) {\n            loadSystems();\n        }\n    }, [systemsList]);\n\n    return (\n        <div className=\"d-flex flex-column systemContainer\">\n            <div className=\"d-flex flex-row systemSelectRow\">\n                <div style={{width: \"100px\"}}>System ID:</div>\n                <div className=\"flex-grow-1\">\n                    <select\n                        onChange={selectSystemId}\n                        className=\"customSelector\">\n                        {systems}\n                    </select>\n                </div>\n            </div>\n            <div className=\"d-flex flex-row systemSelectRow\">\n                <div style={{width: \"100px\"}}>Version:</div>\n                <div className=\"flex-grow-1\">\n                    <select\n                        onChange={selectVersion}\n                        className=\"customSelector\">\n                        {versions}\n                    </select>\n                </div>\n            </div>\n            <div className=\"d-flex flex-row systemSelectRow\">\n                <div style={{width: \"100px\"}}>Deployments:</div>\n                <div className=\"flex-grow-1\">\n                    <select\n                        onChange={selectDeployment}\n                        className=\"customSelector\">\n                        {deployments}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useContext, useEffect, useState} from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport ActiveTraceContext from \"../../../../Providers/ActiveTraceContext.js\";\nimport {formatTimestampToDateTime, getDurationinSeconds} from \"./helper.js\";\n\nimport \"./TraceRow.scss\";\n\nTraceRow.propTypes = {\n    node: PropTypes.object,\n};\n\n\n/**\n * Contains the trace node component.\n * @return {JSX.Element}\n */\nexport function TraceRow ({node}) {\n    const [startTs, setStartTs] = useState();\n    const [startProgram, setStartProgram] = useState();\n    const [duration, setDuration] = useState();\n    const [numberOfEvents, setNumberOfEvents] = useState();\n\n    const {activeTrace, setActiveTrace} = useContext(ActiveTraceContext);\n    const [activeStyle, setActiveStyle] = useState({});\n\n    useEffect(() => {\n        if (node) {\n            const duration = getDurationinSeconds(node.start_ts, node.end_ts);\n            let traceList;\n            try {\n                traceList = JSON.parse(node.traces);\n            } catch (error) {\n                console.error(\"Failed to parse traces JSON:\", error);\n                traceList = [];\n            }\n\n            setStartTs(formatTimestampToDateTime(node.start_ts));\n            setStartProgram(traceList.length > 0 ? traceList[0].programName : \"Unknown\");\n            setDuration(duration);\n            setNumberOfEvents(traceList.length);\n        }\n    }, [node]);\n\n    const selectTrace = (e) => {\n        setActiveTrace(node);\n    };\n\n    useEffect(() => {\n        if (activeTrace) {\n            if (activeTrace?.trace_id === node?.trace_id) {\n                setActiveStyle({borderLeft: \"solid 7px green\"});\n            } else {\n                setActiveStyle({});\n            }\n        }\n    }, [activeTrace, node]);\n\n    return (\n        <div className=\"nodeRow\" style={activeStyle} onClick={selectTrace}>\n            <div className=\"d-flex flex-row\">\n                <div >Starts at {startProgram}</div>\n                <div className=\"flex-grow-1 text-end\">{duration} Seconds</div>\n            </div>\n            <div className=\"d-flex flex-row\">\n                <div style={{width: \"200px\"}}>{startTs}</div>\n                <div className=\"flex-grow-1 text-end\">{numberOfEvents} Events</div>\n            </div>\n\n        </div>\n    );\n}\n","/**\n * Get the delta betwen two timestamps in seconds.\n * @param {Number} start Starting timestamp\n * @param {Number} end Ending timestamp\n * @return {object}\n */\nexport function getDurationinSeconds (start, end) {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const durationSec = (endDate.getTime() - startDate.getTime()) / 1000;\n    return durationSec;\n}\n\n/**\n * Formats a given timestamp to a human readable form.\n * @param {Number} timestamp\n * @return {String} Formatted string representing the date.\n */\nexport function formatTimestampToDateTime (timestamp) {\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    const hours = String(date.getHours()).padStart(2, \"0\");\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n};\n","import React, {useContext, useEffect, useState} from \"react\";\n\nimport ActiveTraceContext from \"../../../Providers/ActiveTraceContext\";\nimport ActiveTracesContext from \"../../../Providers/ActiveTracesContext\";\nimport {TraceRow} from \"./TraceRow/TraceRow\";\n\nimport \"./TraceView.scss\";\n\n/**\n * Contains the system selector components.\n * @return {JSX.Element}\n */\nexport function TraceView () {\n    const {activeTraces, setActiveTraces} = useContext(ActiveTracesContext);\n    const {activeTrace, setActiveTrace} = useContext(ActiveTraceContext);\n\n    const [nodes, setNodes] = useState([]);\n\n    useEffect(() => {\n        if (activeTraces) {\n            const traces = activeTraces.sort(function (a, b) {\n                return a.start_ts - b.start_ts;\n            });\n            const _nodes = [];\n            for (const node of traces) {\n                _nodes.push(<TraceRow key={node.trace_id} node={node} />);\n            }\n            setActiveTrace(traces[0]);\n            setNodes([_nodes]);\n        }\n    }, [activeTraces]);\n\n    return (\n        <div className=\"tracesContainer\">\n            {nodes}\n        </div>\n    );\n}\n","import React, {useRef} from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./VerticleHandle.scss\";\n\nVerticleHandle.propTypes = {\n    topDiv: PropTypes.object,\n    bottomDiv: PropTypes.object,\n};\n\n/**\n * Renders a vertically resizable handle for the accordian components.\n * It accepts two components which are resized when the handle is moved.\n * @return {JSX.Element}\n */\nexport function VerticleHandle ({topDiv, bottomDiv}) {\n    const handleRef = useRef();\n\n    const MIN_CONTAINER_HEIGHT = 25;\n\n    // Initial values used to calculate delta on mouse move.\n    let downValueY;\n    let topHeight;\n    let bottomHeight;\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n\n        downValueY = e.clientY;\n        topHeight = topDiv.current.getBoundingClientRect().height;\n        bottomHeight = bottomDiv.current.getBoundingClientRect().height;\n\n        handleRef.current.classList.add(\"handle-active\");\n    };\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const delta = e.clientY - downValueY;\n        const newPreHeight = topHeight + delta;\n        const newPostHeight = bottomHeight - delta;\n\n        if (newPreHeight > MIN_CONTAINER_HEIGHT && newPostHeight > MIN_CONTAINER_HEIGHT) {\n            topDiv.current.style.height = newPreHeight + \"px\";\n            bottomDiv.current.style.height = newPostHeight + \"px\";\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        handleRef.current.classList.remove(\"handle-active\");\n    };\n\n    return (\n        <div ref={handleRef} onMouseDown={handleMouseDown} className=\"vertical-handle\"></div>\n    );\n}\n","import React, {useEffect, useRef} from \"react\";\n\nimport {SystemSelector} from \"./SystemSelector/SystemSelector\";\nimport {TraceView} from \"./TraceView/TraceView\";\nimport {VerticleHandle} from \"./VerticleHandle/VerticleHandle\";\n\nimport \"./SystemSelectorContainer.scss\";\n\n/**\n * Contains the debugger accordian sections.\n * @return {JSX.Element}\n */\nexport function SystemSelectorContainer () {\n    const debugContainerRef = useRef();\n    const variableStackRef = useRef();\n    const callStackRef = useRef();\n\n    const TITLE_HEIGHT = 20;\n\n    const redrawContainers = () => {\n        const height = debugContainerRef.current.clientHeight;\n        const containerHeight = height - 150;\n        variableStackRef.current.style.height = 150 - TITLE_HEIGHT + \"px\";\n        callStackRef.current.style.height = containerHeight - TITLE_HEIGHT + \"px\";\n    };\n\n    useEffect(() => {\n        redrawContainers();\n    }, []);\n\n    return (\n        <div ref={debugContainerRef} className=\"debug-container w-100 d-flex flex-column\">\n            <div className=\"w-100 title\" style={{height: TITLE_HEIGHT + \"px\"}}>System Selector</div>\n            <div className=\"section\" ref={variableStackRef}>\n                <SystemSelector />\n            </div>\n            <VerticleHandle topDiv={variableStackRef} bottomDiv={callStackRef}/>\n            <div className=\"w-100 title\" style={{height: TITLE_HEIGHT + \"px\"}}>Traces</div>\n            <div className=\"section\" ref={callStackRef}>\n                <TraceView />\n            </div>\n        </div>\n    );\n}\n","import React, {useRef, useState} from \"react\";\n\nimport {Diagram3, Gear, Keyboard} from \"react-bootstrap-icons\";\n\nimport {SystemSelectorContainer} from \"../../Components/SystemSelectorContainer/SystemSelectorContainer\";\n\nimport \"./LeftSideContainer.scss\";\n\n/**\n * Renders the left side menu and accordian containers.\n * @return {JSX.Element}\n */\nexport function LeftSideContainer () {\n    const [activeMenu, setActiveMenu] = useState(1);\n\n    const accordian = useRef();\n    const handle = useRef();\n\n    const SIDE_MENU_WIDTH = 50;\n    const ACCORDIAN_WIDTH = 400;\n    const MIN_EDITOR_WIDTH = 400;\n    const MIN_ACCORDIAN_WIDTH = 200;\n    const MAX_ACCORDIAN_WIDTH = document.body.clientWidth - SIDE_MENU_WIDTH - MIN_EDITOR_WIDTH;\n\n    let downValueX;\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.add(\"handle-active\");\n        downValueX = e.clientX;\n    };\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const delta = e.clientX - downValueX;\n        const newWidth = accordian.current.getBoundingClientRect().width + delta;\n        if (newWidth > MIN_ACCORDIAN_WIDTH && newWidth < MAX_ACCORDIAN_WIDTH) {\n            accordian.current.style.width = newWidth + \"px\";\n            downValueX = e.clientX;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.remove(\"handle-active\");\n    };\n\n    const getActiveMenuComponent = () => {\n        if (activeMenu === 1) {\n            return <SystemSelectorContainer/>;\n        } else if (activeMenu === 2) {\n            return <></>;\n        } else if (activeMenu === 3) {\n            return <></>;\n        }\n    };\n\n    return (\n        <div className=\"side-container d-flex flex-row\">\n            <div className=\"menu d-flex flex-column\" style={{width: SIDE_MENU_WIDTH+\"px\"}}>\n                <div className=\"d-flex flex-column align-items-center\">\n                    <Diagram3 className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(1);}}\n                        style={{color: activeMenu == 1 ? \"white\": \"grey\"}}/>\n                </div>\n                <div className=\"mt-auto d-flex flex-column align-items-center\">\n                    <Keyboard className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(3);}}\n                        style={{color: activeMenu == 3 ? \"white\": \"grey\"}}/>\n                    <Gear className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(2);}}\n                        style={{color: activeMenu == 2 ? \"white\": \"grey\"}}/>\n                </div>\n            </div>\n            <div className=\"accordian\" ref={accordian} style={{width: ACCORDIAN_WIDTH+\"px\"}}>\n                {getActiveMenuComponent()}\n            </div>\n            <div className=\"handle\" ref={handle} onMouseDown={handleMouseDown}></div>\n        </div>\n    );\n}\n","import React, {useContext} from \"react\";\n\nimport ReactJsonView from \"@microlink/react-json-view\";\nimport PropTypes from \"prop-types\";\n\nimport \"./VariableContainer.scss\";\n\nVariableContainer.propTypes = {\n    type: PropTypes.string,\n    variables: PropTypes.object,\n};\n\n/**\n * Contains the variable stack container.\n * @return {JSX.Element}\n */\nexport function VariableContainer ({type, variables}) {\n    const variableStackTheme = {\n        base00: \"#252526\",\n        base01: \"#ddd\",\n        base02: \"#474747\",\n        base03: \"#444\",\n        base04: \"#717171\",\n        base05: \"#444\",\n        base06: \"#444\",\n        base07: \"#c586c0\", // keys\n        base08: \"#444\",\n        base09: \"#ce9178\", // String\n        base0A: \"rgba(70, 70, 230, 1)\",\n        base0B: \"#ce9178\",\n        base0C: \"rgba(70, 70, 230, 1)\",\n        base0D: \"#bbb18c\", // indent arrow\n        base0E: \"#bbb18c\", // indent arrow\n        base0F: \"#a7ce8a\",\n    };\n\n    const getStyle = () => {\n        const hasValue = Object.keys(variables).length > 0;\n        if (type === \"node\" && hasValue) {\n            return {\n                border: \"solid 1px #ff6767\",\n            };\n        } else if (type === \"trace\" && hasValue) {\n            return {};\n        }\n    };\n\n    return (\n        <div className=\"variableStackContainer w-100 h-100\" style={getStyle()}>\n            {Object.keys(variables).length > 0 &&\n                <ReactJsonView\n                    src={variables}\n                    theme={variableStackTheme}\n                    collapsed={1}\n                    name={\"value\"}\n                    groupArraysAfterLength={100}\n                    sortKeys={true}\n                    displayDataTypes={false}\n                    quotesOnKeys={true}\n                    collapseStringsAfterLength={30}>\n                </ReactJsonView>\n            }\n        </div>\n    );\n}\n","import React, {useRef} from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./VerticleHandle.scss\";\n\nVerticleHandle.propTypes = {\n    topDiv: PropTypes.object,\n    bottomDiv: PropTypes.object,\n};\n\n/**\n * Renders a vertically resizable handle for the accordian components.\n * It accepts two components which are resized when the handle is moved.\n * @return {JSX.Element}\n */\nexport function VerticleHandle ({topDiv, bottomDiv}) {\n    const handleRef = useRef();\n\n    const MIN_CONTAINER_HEIGHT = 25;\n\n    // Initial values used to calculate delta on mouse move.\n    let downValueY;\n    let topHeight;\n    let bottomHeight;\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n\n        downValueY = e.clientY;\n        topHeight = topDiv.current.getBoundingClientRect().height;\n        bottomHeight = bottomDiv.current.getBoundingClientRect().height;\n\n        handleRef.current.classList.add(\"handle-active\");\n    };\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const delta = e.clientY - downValueY;\n        const newPreHeight = topHeight + delta;\n        const newPostHeight = bottomHeight - delta;\n\n        if (newPreHeight > MIN_CONTAINER_HEIGHT && newPostHeight > MIN_CONTAINER_HEIGHT) {\n            topDiv.current.style.height = newPreHeight + \"px\";\n            bottomDiv.current.style.height = newPostHeight + \"px\";\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        handleRef.current.classList.remove(\"handle-active\");\n    };\n\n    return (\n        <div ref={handleRef} onMouseDown={handleMouseDown} className=\"vertical-handle\"></div>\n    );\n}\n","import React, {useContext, useEffect, useRef, useState} from \"react\";\n\nimport ActiveNodeContext from \"../../Providers/ActiveNodeContext\";\nimport ActiveTraceContext from \"../../Providers/ActiveTraceContext\";\nimport {VariableContainer} from \"./VariableContainer/VariableContainer\";\nimport {VerticleHandle} from \"./VerticleHandle/VerticleHandle\";\n\nimport \"./VariableStackContainer.scss\";\n\n/**\n * Contains the debugger accordian sections.\n * @return {JSX.Element}\n */\nexport function VariableStackContainer () {\n    const variableContainerRef = useRef();\n    const {activeTrace, setActiveTrace} = useContext(ActiveTraceContext);\n    const {activeNode, setActiveNode} = useContext(ActiveNodeContext);\n\n    const [traceInput, setTraceInput] = useState({});\n    const [traceOutput, setTraceOutput] = useState({});\n    const [nodeInput, setNodeInput] = useState({});\n    const [nodeOutput, setNodeOutput] = useState({});\n\n    const traceInputRef = useRef();\n    const traceOutputRef = useRef();\n    const nodeInputRef = useRef();\n    const nodeOutputRef = useRef();\n\n    const TITLE_HEIGHT = 20;\n\n    const redrawContainers = () => {\n        const height = variableContainerRef.current.clientHeight;\n        const containerHeight = height/4;\n        traceInputRef.current.style.height = containerHeight - TITLE_HEIGHT + \"px\";\n        traceOutputRef.current.style.height = containerHeight - TITLE_HEIGHT + \"px\";\n        nodeInputRef.current.style.height = containerHeight - TITLE_HEIGHT + \"px\";\n        nodeOutputRef.current.style.height = containerHeight - TITLE_HEIGHT + \"px\";\n    };\n\n    useEffect(() => {\n        redrawContainers();\n    }, []);\n\n    useEffect(() => {\n        if (activeNode) {\n            const node = activeNode.sourceNode;\n            if (node.type == \"adli_output\") {\n                setNodeInput({});\n                setNodeOutput(node.adliValue);\n            } else if (node.type == \"adli_input\") {\n                if (\"output\" in node) {\n                    setNodeInput(node.adliValue);\n                    setNodeOutput(node.output[0].adliValue);\n                } else {\n                    setNodeInput(node.adliValue);\n                    setNodeOutput({});\n                }\n            }\n        } else {\n            setNodeInput({});\n            setNodeOutput({});\n        }\n    }, [activeNode]);\n\n    useEffect(() => {\n        if (activeTrace) {\n            const trace = JSON.parse(activeTrace.traces);\n            setTraceInput(trace[0].adliValue);\n            setTraceOutput(trace[trace.length -1].adliValue);\n            setNodeInput({});\n            setNodeOutput({});\n        }\n    }, [activeTrace]);\n\n    return (\n        <div ref={variableContainerRef} className=\"variable-container w-100 d-flex flex-column\">\n            <div className=\"w-100 variable-title\" style={{height: TITLE_HEIGHT + \"px\"}}>\n                Trace Input\n            </div>\n            <div className=\"section\" ref={traceInputRef}>\n                <VariableContainer type={\"trace\"} variables={traceInput}/>\n            </div>\n            <VerticleHandle topDiv={traceInputRef} bottomDiv={traceOutputRef}/>\n            <div className=\"w-100 variable-title\" style={{height: TITLE_HEIGHT + \"px\"}}>\n                Trace Output\n            </div>\n            <div className=\"section\" ref={traceOutputRef}>\n                <VariableContainer type={\"trace\"} variables={traceOutput}/>\n            </div>\n            <VerticleHandle topDiv={traceOutputRef} bottomDiv={nodeInputRef}/>\n            <div className=\"w-100 variable-title\" style={{height: TITLE_HEIGHT + \"px\"}}>\n                Selected Node Input\n            </div>\n            <div className=\"section\" ref={nodeInputRef}>\n                <VariableContainer type={\"node\"} variables={nodeInput}/>\n            </div>\n            <VerticleHandle topDiv={nodeInputRef} bottomDiv={nodeOutputRef}/>\n            <div className=\"w-100 variable-title\" style={{height: TITLE_HEIGHT + \"px\"}}>\n                Selected Node Output\n            </div>\n            <div className=\"section\" ref={nodeOutputRef}>\n                <VariableContainer type={\"node\"} variables={nodeOutput}/>\n            </div>\n        </div>\n    );\n}\n","import React, {useRef, useState} from \"react\";\n\nimport {VariableStackContainer} from \"../../Components/VariableStackContainer/VariableStackContainer\";\n\nimport \"./RightSideContainer.scss\";\n\n/**\n * Renders the right side menu and accordian containers.\n * @return {JSX.Element}\n */\nexport function RightSideContainer () {\n    const accordian = useRef();\n    const handle = useRef();\n\n    const ACCORDIAN_WIDTH = 400;\n    const MIN_EDITOR_WIDTH = 400;\n    const MIN_ACCORDIAN_WIDTH = 200;\n    const MAX_ACCORDIAN_WIDTH = document.body.clientWidth - MIN_EDITOR_WIDTH;\n\n    let downValueX;\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.add(\"handle-active\");\n        downValueX = e.clientX;\n    };\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const delta = e.clientX - downValueX;\n        const newWidth = accordian.current.getBoundingClientRect().width - delta;\n        if (newWidth > MIN_ACCORDIAN_WIDTH && newWidth < MAX_ACCORDIAN_WIDTH) {\n            accordian.current.style.width = newWidth + \"px\";\n            downValueX = e.clientX;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.remove(\"handle-active\");\n    };\n\n    return (\n        <div className=\"side-container d-flex flex-row\">\n            <div className=\"handle\" ref={handle} onMouseDown={handleMouseDown}></div>\n            <div className=\"accordian\" ref={accordian} style={{width: ACCORDIAN_WIDTH+\"px\"}}>\n                <VariableStackContainer />\n            </div>\n        </div>\n    );\n}\n","import React, {useContext, useEffect, useState} from \"react\";\n\nimport {ReadyState} from \"react-use-websocket\";\n\nimport WebsocketConnectionStateContext from \"../../Providers/WebsocketConnectionStateContext\";\n\nimport \"./StatusBar.scss\";\n/**\n * Contains the status bar.\n * @return {JSX.Element}\n */\nexport function StatusBar () {\n    const {readyState} = useContext(WebsocketConnectionStateContext);\n    const [websocketState, setWebsocketState] = useState(\"Uninstantiated\");\n\n    // Map connection status to string for debugging\n    const connectionStatus = {\n        [ReadyState.CONNECTING]: \"Attempting Connecting\",\n        [ReadyState.OPEN]: \"Open\",\n        [ReadyState.CLOSING]: \"Closing\",\n        [ReadyState.CLOSED]: \"Connection Closed\",\n        [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\n    }[readyState];\n\n    useEffect(() => {\n        setWebsocketState(connectionStatus);\n    }, [readyState]);\n\n    const statusBarStyle = {\n        width: \"100%\",\n        height: \"100%\",\n        color: \"white\",\n        paddingRight: \"5px\",\n    };\n\n    const statusMessageStyle = {\n        textAlign: \"center\",\n        float: \"right\",\n        marginTop: \"3px\",\n        fontSize: \"12px\",\n    };\n\n\n    return (\n        <div style={statusBarStyle}>\n            <div style={statusMessageStyle}>\n                Websocket Connection: {websocketState}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport {FileViewer} from \"./FileViewer/FileViewer\";\nimport {LeftSideContainer} from \"./LeftSideContainer/LeftSideContainer\";\nimport {RightSideContainer} from \"./RightSideContainer/RightSideContainer\";\nimport {StatusBar} from \"../Components/StatusBar/StatusBar\";\n\nimport \"./Viewer.scss\";\n\n/**\n * Renders the Diagnostic Log Viewer.\n * @return {JSX.Element}\n */\nexport function Viewer () {\n    return (\n        <div className=\"viewer-container\">\n            <div className=\"menu-container\"></div>\n            <div className=\"body-container d-flex flex-row\">\n                <div className=\"d-flex h-100\">\n                    <LeftSideContainer />\n                </div>\n                <div className=\"d-flex flex-grow-1 h-100 overflow-hidden\">\n                    <FileViewer />\n                </div>\n                <div className=\"d-flex h-100\">\n                    <RightSideContainer />\n                </div>\n            </div>\n            <div className=\"status-bar-container\">\n                <StatusBar />\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport ASPProviders from \"./Providers/ASPProviders\";\nimport {Viewer} from \"./Viewer/Viewer\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\n/**\n * Renders the application.\n *\n * @return {JSX.Element}\n */\nexport function App () {\n    return (\n        <ASPProviders>\n            <Viewer/>\n        </ASPProviders>\n    );\n}\n","import React from \"react\";\n\nimport {createRoot} from \"react-dom/client\";\n\nimport {App} from \"./App\";\n\nconst root = createRoot(document.getElementById(\"app\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"names":["createContext","_createClass","System","systemInfo","_classCallCheck","this","id","system_id","version","sysId","String","programs","deployments","console","log","ASPProviders","propTypes","children","PropTypes","WS_URL","_ref","_useState2","_slicedToArray","useState","setMessageHistory","_useState4","systemsList","setSystemsList","_useState6","activeSystem","setActiveSystem","_useState8","activeTraces","setActiveTraces","_useState10","activeTrace","setActiveTrace","_useState12","activeNode","setActiveNode","_useWebSocket","useWebSocket","share","shouldReconnect","sendJsonMessage","lastJsonMessage","readyState","connectionStatus","_defineProperty","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","useEffect","debug","concat","queryType","handleMessage","prev","msg","systems","_systems","response","forEach","system","index","push","data","deployment","React","WebsocketConnectionStateContext","Provider","value","ActiveNodeContext","ActiveTraceContext","SystemsContext","ActiveSystemContext","ActiveTracesContext","marker","type","MarkerType","ArrowClosed","width","height","color","arrowStyle","strokeWidth","stroke","Flow","trace","fitView","useReactFlow","colorMode","_useNodesState2","useNodesState","nodes","setNodes","onNodesChange","_useEdgesState2","useEdgesState","edges","setEdges","onEdgesChange","_useContext","useContext","flowInfo","Array","isArray","length","node","flowId","adliExecutionId","flowNode","position","x","y","label","programName","sourceNode","prevNode","edge","source","target","animated","markerEnd","style","getNodesFromTrace","layouted","g","Dagre","Graph","setDefaultEdgeLabel","setGraph","rankdir","ranksep","setEdge","_node$measured$width","_node$measured","_node$measured$height","_node$measured2","setNode","_objectSpread","measured","map","_node$measured$width2","_node$measured3","_node$measured$height2","_node$measured4","getLayoutedElements","_toConsumableArray","ReactFlow","onNodeClick","e","onPaneClick","Controls","TraceDiagram","_ref2","traces","traceList","setTraceList","_useContext2","JSON","parse","ReactFlowProvider","FileViewer","SystemSelector","setSystems","versions","setVersions","setDeployments","activeSystemId","setActiveSystemId","activeVersion","setActiveVersion","setActiveDeployment","loadVersions","systemid","filteredSystems","filter","obj","versionsList","Set","item","_versions","key","loadDeployments","sys","_deployments","sysDeployments","deployment_id","sysIds","loadSystems","className","onChange","TraceRow","startTs","setStartTs","startProgram","setStartProgram","duration","setDuration","numberOfEvents","setNumberOfEvents","activeStyle","setActiveStyle","start","start_ts","end","end_ts","startDate","Date","getTime","error","timestamp","year","date","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","trace_id","borderLeft","onClick","TraceView","_step","sort","a","b","_nodes","_iterator","_createForOfIteratorHelper","s","n","done","err","f","VerticleHandle","downValueY","topHeight","bottomHeight","topDiv","bottomDiv","handleRef","useRef","handleMouseMove","preventDefault","stopPropagation","delta","clientY","newPreHeight","newPostHeight","current","handleMouseUp","document","removeEventListener","classList","remove","ref","onMouseDown","addEventListener","getBoundingClientRect","add","SystemSelectorContainer","debugContainerRef","variableStackRef","callStackRef","containerHeight","clientHeight","TITLE_HEIGHT","LeftSideContainer","downValueX","activeMenu","setActiveMenu","accordian","handle","MAX_ACCORDIAN_WIDTH","body","clientWidth","clientX","newWidth","SIDE_MENU_WIDTH","Diagram3","size","Keyboard","Gear","ACCORDIAN_WIDTH","VariableContainer","hasValue","variables","Object","keys","border","ReactJsonView","src","theme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","collapsed","name","groupArraysAfterLength","sortKeys","displayDataTypes","quotesOnKeys","collapseStringsAfterLength","VariableStackContainer","variableContainerRef","traceInput","setTraceInput","traceOutput","setTraceOutput","nodeInput","setNodeInput","nodeOutput","setNodeOutput","traceInputRef","traceOutputRef","nodeInputRef","nodeOutputRef","adliValue","output","RightSideContainer","StatusBar","websocketState","setWebsocketState","paddingRight","textAlign","float","marginTop","fontSize","Viewer","App","createRoot","getElementById","render"],"sourceRoot":""}
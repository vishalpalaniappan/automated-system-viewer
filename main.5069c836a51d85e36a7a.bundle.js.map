{"version":3,"file":"main.5069c836a51d85e36a7a.bundle.js","mappings":"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","sources":["webpack://automated-system-viewer/./src/Providers/FileTreeContext.js","webpack://automated-system-viewer/./src/Providers/GraphInfoContext.js","webpack://automated-system-viewer/./src/Providers/TraceParser.js","webpack://automated-system-viewer/./src/Providers/UniqueTraceContext.js","webpack://automated-system-viewer/./src/Providers/ASPProviders.js","webpack://automated-system-viewer/./src/Components/Graph/Graph.js","webpack://automated-system-viewer/./src/Components/Tabs/Tab/Tab.js","webpack://automated-system-viewer/./src/Components/Tabs/Tabs.js","webpack://automated-system-viewer/./src/Components/MonacoInstance/MonacoInstance.js","webpack://automated-system-viewer/./src/Components/TraceView/TraceView.js","webpack://automated-system-viewer/./src/Viewer/FileViewer/FileViewer.js","webpack://automated-system-viewer/./src/Viewer/SideContainer/SideContainer.js","webpack://automated-system-viewer/./src/Viewer/Viewer.js","webpack://automated-system-viewer/./src/App.js","webpack://automated-system-viewer/./src/index.js"],"sourcesContent":["import {createContext} from \"react\";\n\n// This context stores the file tree which has the source\n// code for each of the files in the program.\nconst FileTreeContext = createContext();\n\nexport default FileTreeContext;\n","import {createContext} from \"react\";\n\n// This context stores the graph info for the system.\nconst GraphInfoContext = createContext();\n\nexport default GraphInfoContext;\n","\n/**\n *\n */\nclass TraceParser {\n    /**\n     * Identify the log line type and process the line.\n     * @param {Array} uniqueTraces The unique traces extracted by the\n     * system processor.\n     */\n    constructor (uniqueTraces) {\n        this.uniqueTraces = uniqueTraces;\n        this.logFiles = [];\n        this.graphNodes = [];\n\n        this.processTraces();\n\n        this.graphInfo = {\n            \"nodes\": this.graphNodes,\n            \"edges\": null,\n        };\n    }\n\n    /**\n     * Process the traces.\n     */\n    processTraces () {\n        for (const uid in this.uniqueTraces) {\n            if (uid) {\n                this.uniqueTraces[uid].forEach((trace, index) => {\n                    const nodeName = trace.logFileName;\n                    this.addNode(nodeName);\n                });\n            }\n        }\n    }\n\n    /**\n     * Adds a node to the logfile list and graph node\n     * if it doesn't already exist.\n     * @param {String} nodeName\n     */\n    addNode (nodeName) {\n        if (this.logFiles.indexOf(nodeName) == -1) {\n            this.logFiles.push(nodeName);\n            this.graphNodes.push({\n                id: nodeName,\n                data: {label: nodeName},\n                position: {x: (this.logFiles.length) * 200, y: 5},\n            });\n        }\n    }\n};\n\nexport default TraceParser;\n","import {createContext} from \"react\";\n\n// This context stores the unique traces extracted by system processor.\nconst UniqueTraceContext = createContext();\n\nexport default UniqueTraceContext;\n","import React, {useEffect, useState} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport useWebSocket, {ReadyState} from \"react-use-websocket\";\n\nimport FileTreeContext from \"./FileTreeContext\";\nimport GraphInfoContext from \"./GraphInfoContext\";\nimport TraceParser from \"./TraceParser\";\nimport UniqueTraceContext from \"./UniqueTraceContext\";\n\nASPProviders.propTypes = {\n    children: PropTypes.object,\n};\n\nconst WS_URL = \"ws://localhost:8765\";\n\n/**\n * Provides all contexts consumed by the application.\n * @param {JSX} children\n * @param {string} fileInfo\n * @return {JSX}\n */\nfunction ASPProviders ({children}) {\n    // State that holds the history of received messages\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    const [fileTree, setFileTree] = useState();\n    const [uniqueTrace, setUniqueTrace] = useState();\n    const [graphInfo, setGraphInfo] = useState();\n\n    // Open websocket connection and reconnect when it closes\n    const {sendJsonMessage, lastJsonMessage, readyState} = useWebSocket(\n        WS_URL,\n        {\n            share: false,\n            shouldReconnect: () => true,\n        }\n    );\n\n    // Map connection status to string for debugging\n    const connectionStatus = {\n        [ReadyState.CONNECTING]: \"Connecting\",\n        [ReadyState.OPEN]: \"Open\",\n        [ReadyState.CLOSING]: \"Closing\",\n        [ReadyState.CLOSED]: \"Closed\",\n        [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\n    }[readyState];\n\n    // React to changes in the websocket state\n    useEffect(() => {\n        console.debug(`Connection state: ${connectionStatus}`);\n        if (readyState === ReadyState.OPEN) {\n            console.log(\"RUNNING\");\n            sendJsonMessage({code: 2});\n            sendJsonMessage({code: 1});\n        }\n    }, [readyState]);\n\n    // React to received messages\n    useEffect(() => {\n        if (lastJsonMessage) {\n            handleMessage(lastJsonMessage);\n            setMessageHistory((prev) => prev.concat(lastJsonMessage));\n        }\n    }, [lastJsonMessage]);\n\n\n    const handleMessage = (msg) => {\n        if (msg.code == 1) {\n            console.log(\"Unique System Traces:\", msg.response);\n            const parser = new TraceParser(msg.response);\n            setUniqueTrace(msg.response);\n            setGraphInfo(parser.graphInfo);\n        } else if (msg.code == 2) {\n            console.log(\"System File Trees:\", msg.response);\n            setFileTree(msg.response);\n        }\n    };\n\n    return (\n        <>\n            <FileTreeContext.Provider value={{fileTree}}>\n                <UniqueTraceContext.Provider value={{uniqueTrace}}>\n                    <GraphInfoContext.Provider value={{graphInfo}}>\n                        {children}\n                    </GraphInfoContext.Provider>\n                </UniqueTraceContext.Provider>\n            </FileTreeContext.Provider>\n        </>\n    );\n};\n\nexport default ASPProviders;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\n\nimport {\n    addEdge,\n    Background,\n    Controls,\n    MiniMap,\n    ReactFlow,\n    useEdgesState,\n    useNodesState\n} from \"@xyflow/react\";\n\nimport FileTreeContext from \"../../Providers/FileTreeContext\";\nimport GraphInfoContext from \"../../Providers/GraphInfoContext\";\nimport UniqueTraceContext from \"../../Providers/UniqueTraceContext\";\n\nimport \"@xyflow/react/dist/style.css\";\n\n/**\n * SAVING FOR REFERENCE\n * const initialNodes = [\n *     {id: \"hidden-1\", data: {label: \"Node 1\"}, position: {x: 250, y: 5}},\n *     {id: \"hidden-2\", data: {label: \"Node 2\"}, position: {x: 100, y: 100}},\n *     {id: \"hidden-3\", data: {label: \"Node 3\"}, position: {x: 400, y: 100}},\n *     {id: \"hidden-4\", data: {label: \"Node 4\"}, position: {x: 400, y: 200}},\n * ];\n *\n * const initialEdges = [\n *     {id: \"hidden-e1-2\", source: \"hidden-1\", target: \"hidden-2\"},\n *     {id: \"hidden-e1-3\", source: \"hidden-1\", target: \"hidden-3\"},\n *     {id: \"hidden-e3-4\", source: \"hidden-3\", target: \"hidden-4\"},\n * ];\n */\n\nconst HiddenFlow = () => {\n    const uniqueTraces = useContext(UniqueTraceContext);\n    const fileTree = useContext(FileTreeContext);\n    const graphInfo = useContext(GraphInfoContext);\n\n    const [nodes, setNodes, onNodesChange] = useNodesState();\n    const [edges, setEdges, onEdgesChange] = useEdgesState();\n\n    useEffect(() => {\n        if (graphInfo?.graphInfo?.nodes) {\n            // setEdges(uniqueTraces.uniqueTrace.edges);\n            setNodes(graphInfo.graphInfo.nodes);\n        }\n    }, [graphInfo]);\n\n    const onConnect = useCallback(\n        (params) => setEdges((els) => addEdge(params, els)),\n        []\n    );\n\n    return (\n        <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            fitView\n            style={{backgroundColor: \"#F7F9FB\"}}\n        >\n            <Controls />\n            <Background />\n        </ReactFlow>\n    );\n};\n\nexport default HiddenFlow;\n","import React, {useRef} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {FiletypePy} from \"react-bootstrap-icons\";\n\nimport \"./Tab.scss\";\n\nTab.propTypes = {\n    tabName: PropTypes.string,\n};\n\n/**\n * Renders a Tab.\n * @return {JSX.Element}\n */\nexport function Tab ({tabName}) {\n    const tabRef = useRef();\n\n    return (\n        <div ref={tabRef} className=\"tab d-flex align-items-center\">\n            <FiletypePy className=\"icon\"/> {tabName}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport {Tab} from \"./Tab/Tab\";\n\nimport \"./Tabs.scss\";\n\n/**\n * Renders the tabs.\n * @return {JSX.Element}\n */\nexport function Tabs () {\n    return (\n        <div className=\"tabs d-flex\">\n            <Tab tabName={\"sample.py\"}></Tab>\n        </div>\n    );\n}\n","import React, {useRef} from \"react\";\n\nimport Editor, {loader} from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\n\nimport {Tabs} from \"../Tabs/Tabs\";\n\nimport \"./MonacoInstance.scss\";\nimport \"monaco-editor/min/vs/editor/editor.main.css\";\n\n/**\n * Contains the monaco editor.\n * @return {JSX.Element}\n */\nexport function MonacoInstance () {\n    // Refs\n    const editorRef = useRef(null);\n    const monacoRef = useRef(null);\n\n\n    loader.config({monaco});\n\n    /**\n     * Called when editor is finished mounting.\n     * @param {object} editor\n     * @param {object} monaco\n     */\n    const handleEditorDidMount =(editor, monaco) => {\n        monacoRef.current = monaco;\n        editorRef.current = editor;\n    };\n\n\n    return (\n\n\n        <div className=\"file-view-container d-flex flex-column\">\n            <Tabs />\n            <div className=\"editor d-flex flex-grow-1\">\n                <Editor\n                    defaultValue=\"Loading content...\"\n                    theme={\"vs-dark\"}\n                    onMount={handleEditorDidMount}\n                    options={{\n                        \"renderWhitespace\": \"none\",\n                        \"wordWrap\": \"on\",\n                        \"scrollBeyondLastLine\": false,\n                        \"glyphMargin\": true,\n                        \"readOnly\": true,\n                    }}\n                    language=\"python\"\n                />\n            </div>\n        </div>\n    );\n}\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\n\nimport ReactJsonView from \"@microlink/react-json-view\";\n\nimport FileTreeContext from \"../../Providers/FileTreeContext\";\nimport UniqueTraceContext from \"../../Providers/UniqueTraceContext\";\n\nimport \"./TraceView.scss\";\n\nconst TraceView = () => {\n    const uniqueTraces = useContext(UniqueTraceContext);\n    const [uniqueIds, setUniqueIds] = useState(<></>);\n    const [traces, setTraces] = useState(<></>);\n    const [traceJson, setTraceJson] = useState({});\n\n\n    useEffect(() => {\n        if (uniqueTraces?.uniqueTrace) {\n            getUniqueIds(Object.keys(uniqueTraces.uniqueTrace));\n        }\n    }, [uniqueTraces]);\n\n    const getUniqueIds = (ids) => {\n        const options = [];\n        ids.forEach((id, index) => {\n            options.push(\n                <option key={id} value={id} >{id}</option>\n            );\n        });\n        setUniqueIds(options);\n        setTraceJson(uniqueTraces.uniqueTrace[ids[0]]);\n    };\n\n    const selectUid = (event) => {\n        const uid = event.target.value;\n        setTraceJson(uniqueTraces.uniqueTrace[uid]);\n    };\n\n    const variableStackTheme = {\n        base00: \"#252526\",\n        base01: \"#ddd\",\n        base02: \"#474747\",\n        base03: \"#444\",\n        base04: \"#717171\",\n        base05: \"#444\",\n        base06: \"#444\",\n        base07: \"#c586c0\", // keys\n        base08: \"#444\",\n        base09: \"#ce9178\", // String\n        base0A: \"rgba(70, 70, 230, 1)\",\n        base0B: \"#ce9178\",\n        base0C: \"rgba(70, 70, 230, 1)\",\n        base0D: \"#bbb18c\", // indent arrow\n        base0E: \"#bbb18c\", // indent arrow\n        base0F: \"#a7ce8a\",\n    };\n\n    return (\n        <div className=\"d-flex flex-column h-100 p-2 trace-container\">\n            {uniqueTraces &&\n                <>\n                    <div style={{color: \"white\"}}>\n                        Select Unique Trace:\n                    </div>\n\n                    <select onChange={selectUid} name=\"selectedFruit\" style={{width: \"100%\"}}>\n                        {uniqueIds}\n                    </select>\n                    <div className=\"d-flex flex-grow-1 trace-info-container\">\n                        <ReactJsonView\n                            src={traceJson}\n                            theme={variableStackTheme}\n                            collapsed={1}\n                            name={\"traces\"}\n                            groupArraysAfterLength={100}\n                            sortKeys={true}\n                            displayDataTypes={false}\n                            quotesOnKeys={true}\n                            collapseStringsAfterLength={30}>\n                        </ReactJsonView>\n                    </div>\n                </>\n            }\n        </div>\n    );\n};\n\nexport default TraceView;\n","import React, {useEffect, useRef, useState} from \"react\";\n\nimport GridLayout from \"react-grid-layout\";\n\nimport CustomNodeFlow from \"../../Components/Graph/Graph\";\nimport {MonacoInstance} from \"../../Components/MonacoInstance/MonacoInstance\";\nimport TraceView from \"../../Components/TraceView/TraceView\";\n\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport \"./FileViewer.scss\";\nimport \"monaco-editor/min/vs/editor/editor.main.css\";\n\n/**\n * Renders the monaco editor and the tabs.\n * @return {JSX.Element}\n */\nexport function FileViewer () {\n    const viewerRef = useRef();\n\n    const [showGrid, setShowGrid] = useState(false);\n    const [editorWidth, setEditorWidth] = useState();\n    const [editorHeight, setEditorHeight] = useState();\n\n    const [layout, setLayout] = useState();\n\n    useEffect(() => {\n        const updateDimensions = () => {\n            if (viewerRef.current) {\n                const height = viewerRef.current.getBoundingClientRect().height/4;\n                const width = viewerRef.current.getBoundingClientRect().width;\n                setEditorHeight(height);\n                setEditorWidth(width);\n            }\n        };\n\n        updateDimensions();\n\n        setLayout([\n            {i: \"a\", x: 0, y: 0, w: 12, h: 2},\n            {i: \"d\", x: 0, y: 8, w: 12, h: 2},\n        ]);\n\n        setShowGrid(true);\n\n        const observer = new ResizeObserver(updateDimensions);\n        observer.observe(viewerRef.current);\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <div ref={viewerRef} className=\"file-view-container d-flex flex-row\">\n            {showGrid &&\n                <GridLayout\n                    className=\"layout\"\n                    layout={layout}\n                    cols={12}\n                    rowHeight={editorHeight}\n                    maxRows={3}\n                    width={editorWidth}\n                    margin={[5, 5]}\n                >\n                    <div key=\"a\">\n                        <CustomNodeFlow/>\n                    </div>\n                    <div key=\"d\">\n                        <MonacoInstance/>\n                    </div>\n                </GridLayout>\n            }\n        </div>\n    );\n}\n","import React, {useRef, useState} from \"react\";\n\nimport {Diagram3, Gear, Keyboard} from \"react-bootstrap-icons\";\n\nimport TraceView from \"../../Components/TraceView/TraceView\";\n\nimport \"./SideContainer.scss\";\n\n/**\n * Renders the side menu and accordian containers.\n * @return {JSX.Element}\n */\nexport function SideContainer () {\n    const [activeMenu, setActiveMenu] = useState(1);\n\n    const accordian = useRef();\n    const handle = useRef();\n\n    const SIDE_MENU_WIDTH = 50;\n    const ACCORDIAN_WIDTH = 350;\n    const MIN_EDITOR_WIDTH = 400;\n    const MIN_ACCORDIAN_WIDTH = 200;\n    const MAX_ACCORDIAN_WIDTH = document.body.clientWidth - SIDE_MENU_WIDTH - MIN_EDITOR_WIDTH;\n\n    let downValueX;\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.add(\"handle-active\");\n        downValueX = e.clientX;\n    };\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const delta = e.clientX - downValueX;\n        const newWidth = accordian.current.getBoundingClientRect().width + delta;\n        if (newWidth > MIN_ACCORDIAN_WIDTH && newWidth < MAX_ACCORDIAN_WIDTH) {\n            accordian.current.style.width = newWidth + \"px\";\n            downValueX = e.clientX;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.removeEventListener(\"mousemove\", handleMouseMove);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        handle.current.classList.remove(\"handle-active\");\n    };\n\n    const getActiveMenuComponent = () => {\n        if (activeMenu === 1) {\n            return <TraceView/>;\n        } else if (activeMenu === 2) {\n            return <></>;\n        } else if (activeMenu === 3) {\n            return <></>;\n        }\n    };\n\n    return (\n        <div className=\"side-container d-flex flex-row\">\n            <div className=\"menu d-flex flex-column\" style={{width: SIDE_MENU_WIDTH+\"px\"}}>\n                <div className=\"d-flex flex-column align-items-center\">\n                    <Diagram3 className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(1);}}\n                        style={{color: activeMenu == 1 ? \"white\": \"grey\"}}/>\n                </div>\n                <div className=\"mt-auto d-flex flex-column align-items-center\">\n                    <Keyboard className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(3);}}\n                        style={{color: activeMenu == 3 ? \"white\": \"grey\"}}/>\n                    <Gear className=\"menu-icon\" size={25}\n                        onClick={(e) => {setActiveMenu(2);}}\n                        style={{color: activeMenu == 2 ? \"white\": \"grey\"}}/>\n                </div>\n            </div>\n            <div className=\"accordian\" ref={accordian} style={{width: ACCORDIAN_WIDTH+\"px\"}}>\n                {getActiveMenuComponent()}\n            </div>\n            <div className=\"handle\" ref={handle} onMouseDown={handleMouseDown}></div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport {FileViewer} from \"./FileViewer/FileViewer\";\nimport {SideContainer} from \"./SideContainer/SideContainer\";\n\nimport \"./Viewer.scss\";\n\n/**\n * Renders the Diagnostic Log Viewer.\n * @return {JSX.Element}\n */\nexport function Viewer () {\n    return (\n        <div className=\"viewer-container\">\n            <div className=\"menu-container\"></div>\n            <div className=\"body-container d-flex flex-row\">\n                <div className=\"d-flex h-100\">\n                    <SideContainer />\n                </div>\n                <div className=\"d-flex flex-grow-1 h-100 overflow-hidden\">\n                    <FileViewer />\n                </div>\n            </div>\n            <div className=\"status-bar-container\">\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport ASPProviders from \"./Providers/ASPProviders\";\nimport {Viewer} from \"./Viewer/Viewer\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\n/**\n * Renders the application.\n *\n * @return {JSX.Element}\n */\nexport function App () {\n    return (\n        <ASPProviders>\n            <Viewer/>\n        </ASPProviders>\n    );\n}\n","import React from \"react\";\n\nimport {createRoot} from \"react-dom/client\";\n\nimport {App} from \"./App\";\n\nconst root = createRoot(document.getElementById(\"app\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"names":["createContext","TraceParser","uniqueTraces","_classCallCheck","this","logFiles","graphNodes","processTraces","graphInfo","key","value","_this","uid","forEach","trace","index","nodeName","logFileName","addNode","indexOf","push","id","data","label","position","x","length","y","ASPProviders","propTypes","children","PropTypes","WS_URL","_ref","_useState2","_slicedToArray","useState","setMessageHistory","_useState4","fileTree","setFileTree","_useState6","uniqueTrace","setUniqueTrace","_useState8","setGraphInfo","_useWebSocket","useWebSocket","share","shouldReconnect","sendJsonMessage","lastJsonMessage","readyState","connectionStatus","_defineProperty","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","useEffect","console","debug","concat","log","code","handleMessage","prev","msg","response","parser","React","FileTreeContext","Provider","UniqueTraceContext","GraphInfoContext","useContext","_useNodesState2","useNodesState","nodes","setNodes","onNodesChange","_useEdgesState2","useEdgesState","edges","setEdges","onEdgesChange","_graphInfo$graphInfo","onConnect","useCallback","params","els","addEdge","ReactFlow","fitView","style","backgroundColor","Controls","Background","Tab","tabName","tabRef","useRef","ref","className","FiletypePy","Tabs","MonacoInstance","editorRef","monacoRef","loader","config","monaco","Editor","defaultValue","theme","onMount","editor","current","options","language","uniqueIds","setUniqueIds","traceJson","setTraceJson","getUniqueIds","Object","keys","ids","color","onChange","event","target","name","width","ReactJsonView","src","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","collapsed","groupArraysAfterLength","sortKeys","displayDataTypes","quotesOnKeys","collapseStringsAfterLength","FileViewer","viewerRef","showGrid","setShowGrid","editorWidth","setEditorWidth","editorHeight","setEditorHeight","layout","setLayout","updateDimensions","height","getBoundingClientRect","i","w","h","observer","ResizeObserver","observe","disconnect","GridLayout","cols","rowHeight","maxRows","margin","CustomNodeFlow","SideContainer","downValueX","activeMenu","setActiveMenu","accordian","handle","MAX_ACCORDIAN_WIDTH","document","body","clientWidth","handleMouseMove","e","preventDefault","stopPropagation","delta","clientX","newWidth","handleMouseUp","removeEventListener","classList","remove","SIDE_MENU_WIDTH","Diagram3","size","onClick","Keyboard","Gear","ACCORDIAN_WIDTH","TraceView","onMouseDown","addEventListener","add","Viewer","App","createRoot","getElementById","render"],"sourceRoot":""}